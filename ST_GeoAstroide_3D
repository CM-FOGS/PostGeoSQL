DROP FUNCTION IF EXISTS ST_GeoAstroide_3D(
geom GEOMETRY,
distance float,
direction_degrees_teta numeric,
direction_degrees_fi numeric,	
first_numerator_exponentiation numeric,
first_denominator_exponentiation numeric,
second_numerator_exponentiation numeric,
second_denominator_exponentiation numeric)

CREATE OR REPLACE FUNCTION ST_GeoAstroide_3D(
geom GEOMETRY,
distance float,
direction_degrees_teta numeric,
direction_degrees_fi numeric,	
first_numerator_exponentiation numeric,
first_denominator_exponentiation numeric,
second_numerator_exponentiation numeric,
second_denominator_exponentiation numeric)
RETURNS GEOMETRY AS 
$BODY$
SELECT ST_MakePoint(ST_X($1)+$2*(SIND($3)*COSD($4))^$5/$6, 
ST_Y($1)+$2*(SIND($3)*SIND($4))^$7/$8,
ST_Z($1)+$2*COSD($3));
$BODY$
LANGUAGE SQL

1) 3D_circle:
SELECT ST_ASText(ST_SetSrid(ST_MakeLine(ST_GeoAstroide_3D(geom, 1, i, 1, 1, 1, 1, 1)),4326)) geom 
FROM (SELECT ST_MakePoint(0, 0, 0) geom, generate_series (0,360) i) foo;

2) 3D_spiral:
SELECT ST_ASText(ST_SetSrid(ST_MakeLine(ST_GeoAstroide_3D(geom, 1*i*0.00277777654321, i, 1, 1, 1, 1, 1)),4326)) geom 
FROM (SELECT ST_MakePoint(0, 0, 0) geom, generate_series (0,360*3) i) foo;

3)...âˆž

* Note 
To visualize the result of building ST_Astroide_3D() function it is necessary to use PostGIS ST_AsX3D() function. The link to an example of its use is located at - https://postgis.net/docs/ST_AsX3D.html.
